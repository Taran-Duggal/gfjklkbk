Started by user Taran Singh Duggal
Obtained Jenkinsfile from git https://github.com/Taran-Duggal/DockerDb
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe init C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1 # timeout=10
Fetching upstream changes from https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe --version # timeout=10
 > git --version # 'git version 2.45.1.windows.1'
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe fetch --tags --force --progress -- https://github.com/Taran-Duggal/DockerDb +refs/heads/*:refs/remotes/origin/* # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config remote.origin.url https://github.com/Taran-Duggal/DockerDb # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-parse "refs/remotes/origin/main^{commit}" # timeout=10
Checking out Revision e4a3ba17ea92fea6942c763a362502690848f7be (refs/remotes/origin/main)
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config core.sparsecheckout # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe checkout -f e4a3ba17ea92fea6942c763a362502690848f7be # timeout=10
Commit message: "changes claude"
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-list --no-walk dbe9c37ba90d9234eb241bcade1c9c2d0808592d # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Starting Maven Build ===
[Pipeline] echo
Testing Maven Central connectivity...
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>curl -I --connect-timeout 10 https://repo.maven.apache.org/maven2/  2>nul 
HTTP/1.1 200 OK
Connection: keep-alive
Content-Length: 127860
Last-Modified: Fri, 18 Jul 2025 23:25:10 GMT
ETag: "c4ae6e1c9b46219696aa0e8d4b208f3d"
Content-Type: text/html
Via: 1.1 varnish, 1.1 varnish
Accept-Ranges: bytes
Age: 1930797
Date: Sun, 10 Aug 2025 07:48:13 GMT
X-Served-By: cache-iad-kcgs7200026-IAD, cache-del21746-DEL
X-Cache: HIT, HIT
X-Cache-Hits: 565, 0
X-Timer: S1754812094.603285,VS0,VE1

[Pipeline] echo
Maven Central is accessible - proceeding with normal build
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>mvn clean package -DskipTests=true 
[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------------< com.dockerwithDb:DockerDb >----------------------
[INFO] Building DockerDb 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- clean:3.4.1:clean (default-clean) @ DockerDb ---
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ DockerDb ---
[INFO] Copying 1 resource from src\main\resources to target\classes
[INFO] Copying 1 resource from src\main\resources to target\classes
[INFO] 
[INFO] --- compiler:3.14.0:compile (default-compile) @ DockerDb ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 6 source files with javac [debug parameters release 17] to target\classes
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ DockerDb ---
[INFO] skip non existing resourceDirectory C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\src\test\resources
[INFO] 
[INFO] --- compiler:3.14.0:testCompile (default-testCompile) @ DockerDb ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [debug parameters release 17] to target\test-classes
[INFO] 
[INFO] --- surefire:3.5.3:test (default-test) @ DockerDb ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- war:3.3.2:war (default-war) @ DockerDb ---
[INFO] Packaging webapp
[INFO] Assembling webapp [DockerDb] in [C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student]
[INFO] Processing war project
[INFO] Building war: C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war
[INFO] 
[INFO] --- spring-boot:3.5.4:repackage (repackage) @ DockerDb ---
[INFO] Replacing main artifact C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war with repackaged archive, adding nested dependencies in BOOT-INF/.
[INFO] The original artifact has been renamed to C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war.original
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  11.587 s
[INFO] Finished at: 2025-08-10T13:17:01+05:30
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // script
Post stage
[Pipeline] echo
Build completed successfully!
[Pipeline] echo
Now Archiving the Artifacts
[Pipeline] archiveArtifacts
Archiving artifacts
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Pre-Deployment Checks)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Pre-Deployment Checks ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo "Creating backup directory if it doesn't exist..." 
"Creating backup directory if it doesn't exist..."

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if not exist "C:\Jenkins\Backups\StudentApp" (
mkdir "C:\Jenkins\Backups\StudentApp"  
 echo "Ã¢Å“â€¦ Backup directory created: C:\Jenkins\Backups\StudentApp" 
)  else (echo "Ã¢Å“â€¦ Backup directory already exists: C:\Jenkins\Backups\StudentApp" ) 
"Ã¢Å“â€¦ Backup directory created: C:\Jenkins\Backups\StudentApp"
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo "Checking Tomcat directory access..." 
"Checking Tomcat directory access..."

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if exist "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps" (echo "Ã¢Å“â€¦ Tomcat webapps directory accessible" )  else (
echo "Ã¢ï¿½Å’ Cannot access Tomcat webapps directory"  
 exit 1 
) 
"Ã¢Å“â€¦ Tomcat webapps directory accessible"
[Pipeline] bat
[Pipeline] echo
Current Tomcat service status: C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>sc query Tomcat10   | findstr STATE 
        STATE              : 1  STOPPED
[Pipeline] echo
âœ… Tomcat is not running - can proceed safely
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Create Backup)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Creating Application Backup ===
[Pipeline] bat
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo "Backup timestamp: C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'"  
"Backup timestamp: C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'" 

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>20250810_131705"
'20250810_131705"' is not recognized as an internal or external command,
operable program or batch file.

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo "Backup location: C:\Jenkins\Backups\StudentApp\student.war.backup.C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'"  
"Backup location: C:\Jenkins\Backups\StudentApp\student.war.backup.C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'" 

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>20250810_131705"
'20250810_131705"' is not recognized as an internal or external command,
operable program or batch file.

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if exist "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student.war" (
echo "Ã°Å¸â€œÂ¦ Creating backup of existing WAR file..."  
 copy "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student.war" "C:\Jenkins\Backups\StudentApp\student.war.backup.C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'"   
 20250810_131705" 
 echo "Ã¢Å“â€¦ Backup created successfully: C:\Jenkins\Backups\StudentApp\student.war.backup.C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'"   
 20250810_131705" 
 rem Also backup the expanded directory if it exists  
 if exist "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student" (
echo "Ã°Å¸â€œÂ¦ Creating backup of application directory..."  
 xcopy "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student" "C:\Jenkins\Backups\StudentApp\student_C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'"   
 20250810_131705" /E /I /H /Y 
 echo "Ã¢Å“â€¦ Application directory backed up" 
) 
)  else (
echo "Ã¢â€žÂ¹Ã¯Â¸ï¿½  No existing WAR file found - fresh deployment"  
 echo "FRESH_DEPLOYMENT"  -Format 'yyyyMMdd_HHmmss'"  1>"C:\Jenkins\Backups\StudentApp\deployment_type_C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date  
 20250810_131705.txt"
) 
"Ã¢â€žÂ¹Ã¯Â¸ï¿½  No existing WAR file found - fresh deployment"
The filename, directory name, or volume label syntax is incorrect.
'20250810_131705.txt"' is not recognized as an internal or external command,
operable program or batch file.

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>rem Clean old backups (keep last 5) 

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo "Ã°Å¸Â§Â¹ Cleaning old backups (keeping last 5)..." 
"Ã°Å¸Â§Â¹ Cleaning old backups (keeping last 5)..."

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>for /F "skip=5 tokens=*" %i in ('dir /b /od "C:\Jenkins\Backups\StudentApp\student.war.backup.*" 2>nul') do (
del "C:\Jenkins\Backups\StudentApp\%i"  2>nul  
 echo "Removed old backup: %i" 
) 
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Stop Tomcat (Admin Required))
Stage "Stop Tomcat (Admin Required)" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy Application)
Stage "Deploy Application" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Start Tomcat)
Stage "Start Tomcat" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Post-Deployment Verification)
Stage "Post-Deployment Verification" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== DEPLOYMENT SUMMARY ===
[Pipeline] echo
Backup location: C:\Jenkins\Backups\StudentApp\student.war.backup.C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'" 
20250810_131705
[Pipeline] echo
Backup directory: C:\Jenkins\Backups\StudentApp
[Pipeline] echo
Tomcat stop method: Not stopped
[Pipeline] echo
Tomcat start success: Unknown
[Pipeline] }
[Pipeline] // script
[Pipeline] echo
=== CLEANING UP WORKSPACE ===
[Pipeline] deleteDir
[Pipeline] echo
â�Œ === DEPLOYMENT FAILED ===
[Pipeline] echo
ðŸ”„ ROLLBACK OPTIONS:
[Pipeline] echo
1. Restore from backup: C:\Jenkins\Backups\StudentApp\student.war.backup.C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'" 
20250810_131705
[Pipeline] echo
2. Manual rollback command:
[Pipeline] echo
   copy "C:\Jenkins\Backups\StudentApp\student.war.backup.C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>powershell -Command "Get-Date -Format 'yyyyMMdd_HHmmss'" 
20250810_131705" "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student.war"
[Pipeline] echo

[Pipeline] echo
ðŸ”§ ADMIN PRIVILEGE SOLUTIONS:
[Pipeline] echo
1. Run Jenkins service as Administrator
[Pipeline] echo
2. Use 'Run as Administrator' for Jenkins
[Pipeline] echo
3. Configure Jenkins to run with admin privileges
[Pipeline] echo
4. Manual Tomcat control via Services.msc
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE





pipeline{
    agent any

    environment {
        BACKUP_DIR = 'C:\\Jenkins\\Backups\\StudentApp'
        TOMCAT_WEBAPPS = 'C:\\Program Files\\Apache Software Foundation\\Tomcat 10.1\\webapps'
        TOMCAT_SERVICE = 'Tomcat10'
        APP_NAME = 'student'
    }

    stages{
        stage('Build'){
            steps{
                script{
                    echo "=== Starting Maven Build ==="
                    echo "Testing Maven Central connectivity..."

                    // Test HTTP connectivity to Maven Central
                    def httpTest = bat(script: 'curl -I --connect-timeout 10 https://repo.maven.apache.org/maven2/ 2>nul', returnStatus: true)

                    if(httpTest == 0) {
                        echo "Maven Central is accessible - proceeding with normal build"
                        bat 'mvn clean package -DskipTests=true'
                    } else {
                        echo "HTTPS connection to Maven Central failed - trying alternatives"
                        try {
                            bat 'mvn clean package -DskipTests=true -o'
                            echo "Offline build successful!"
                        } catch (Exception e) {
                            echo "Offline build failed - trying with HTTP repository"
                            bat 'mvn clean package -DskipTests=true -Dmaven.repo.remote=http://repo.maven.apache.org/maven2'
                        }
                    }
                }
            }
            post{
                success{
                    echo 'Build completed successfully!'
                    echo 'Now Archiving the Artifacts'
                    archiveArtifacts artifacts: '**/target/*.war'
                }
                failure{
                    echo '=== BUILD FAILED ==='
                    echo 'Please check Maven configuration and network connectivity'
                }
            }
        }

        stage('Pre-Deployment Checks'){
            steps{
                script{
                    echo "=== Pre-Deployment Checks ==="

                    // Create backup directory if it doesn't exist
                    bat """
                        echo "Creating backup directory if it doesn't exist..."
                        if not exist "${BACKUP_DIR}" (
                            mkdir "${BACKUP_DIR}"
                            echo "✅ Backup directory created: ${BACKUP_DIR}"
                        ) else (
                            echo "✅ Backup directory already exists: ${BACKUP_DIR}"
                        )
                    """

                    // Check if Jenkins has permission to access Tomcat directories
                    bat """
                        echo "Checking Tomcat directory access..."
                        if exist "${TOMCAT_WEBAPPS}" (
                            echo "✅ Tomcat webapps directory accessible"
                        ) else (
                            echo "❌ Cannot access Tomcat webapps directory"
                            exit 1
                        )
                    """

                    // Check current Tomcat service status
                    def serviceStatus = bat(script: "sc query ${TOMCAT_SERVICE} | findstr STATE", returnStdout: true).trim()
                    echo "Current Tomcat service status: ${serviceStatus}"

                    if(serviceStatus.contains("RUNNING")) {
                        echo "⚠️  Tomcat is currently running - will need admin privileges to stop"
                        env.TOMCAT_RUNNING = 'true'
                    } else {
                        echo "✅ Tomcat is not running - can proceed safely"
                        env.TOMCAT_RUNNING = 'false'
                    }
                }
            }
        }

        stage('Create Backup'){
            steps{
                script{
                    echo "=== Creating Application Backup ==="

                    // Generate timestamp for backup
                    def timestamp = bat(script: 'powershell -Command "Get-Date -Format \'yyyyMMdd_HHmmss\'"', returnStdout: true).trim()
                    env.BACKUP_TIMESTAMP = timestamp
                    env.BACKUP_FILE = "${BACKUP_DIR}\\${APP_NAME}.war.backup.${timestamp}"

                    bat """
                        echo "Backup timestamp: ${timestamp}"
                        echo "Backup location: ${env.BACKUP_FILE}"

                        if exist "${TOMCAT_WEBAPPS}\\${APP_NAME}.war" (
                            echo "📦 Creating backup of existing WAR file..."
                            copy "${TOMCAT_WEBAPPS}\\${APP_NAME}.war" "${env.BACKUP_FILE}"
                            echo "✅ Backup created successfully: ${env.BACKUP_FILE}"

                            rem Also backup the expanded directory if it exists
                            if exist "${TOMCAT_WEBAPPS}\\${APP_NAME}" (
                                echo "📦 Creating backup of application directory..."
                                xcopy "${TOMCAT_WEBAPPS}\\${APP_NAME}" "${BACKUP_DIR}\\${APP_NAME}_${timestamp}" /E /I /H /Y
                                echo "✅ Application directory backed up"
                            )
                        ) else (
                            echo "ℹ️  No existing WAR file found - fresh deployment"
                            echo "FRESH_DEPLOYMENT" > "${BACKUP_DIR}\\deployment_type_${timestamp}.txt"
                        )

                        rem Clean old backups (keep last 5)
                        echo "🧹 Cleaning old backups (keeping last 5)..."
                        for /f "skip=5 tokens=*" %%i in ('dir /b /od "${BACKUP_DIR}\\${APP_NAME}.war.backup.*" 2^>nul') do (
                            del "${BACKUP_DIR}\\%%i" 2>nul
                            echo "Removed old backup: %%i"
                        )
                    """
                }
            }
        }

        stage('Stop Tomcat (Admin Required)'){
            steps{
                script{
                    if(env.TOMCAT_RUNNING == 'true') {
                        echo "=== Attempting to Stop Tomcat Service ==="
                        echo "⚠️  This step requires Administrator privileges"

                        try {
                            // Method 1: Try direct service stop
                            echo "Method 1: Attempting direct service stop..."
                            bat "net stop ${TOMCAT_SERVICE}"
                            echo "✅ Tomcat stopped successfully using direct method"
                            env.TOMCAT_STOP_METHOD = 'direct'

                        } catch (Exception e1) {
                            echo "❌ Direct method failed: ${e1.getMessage()}"

                            try {
                                // Method 2: Try with explicit admin check
                                echo "Method 2: Attempting with explicit admin verification..."
                                bat '''
                                    echo "Checking for admin privileges..."
                                    net session >nul 2>&1
                                    if errorlevel 1 (
                                        echo "❌ This script requires Administrator privileges"
                                        echo "Please run Jenkins as Administrator or use 'Run as Administrator'"
                                        exit 1
                                    ) else (
                                        echo "✅ Administrator privileges confirmed"
                                    )
                                '''
                                bat "net stop ${TOMCAT_SERVICE}"
                                echo "✅ Tomcat stopped successfully with admin verification"
                                env.TOMCAT_STOP_METHOD = 'admin_verified'

                            } catch (Exception e2) {
                                echo "❌ Admin method also failed: ${e2.getMessage()}"

                                // Method 3: Try using PowerShell with elevated privileges
                                try {
                                    echo "Method 3: Attempting with PowerShell..."
                                    bat '''
                                        powershell -Command "& {
                                            if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {
                                                Write-Host '❌ PowerShell session is not running as Administrator'
                                                exit 1
                                            } else {
                                                Write-Host '✅ PowerShell running with Administrator privileges'
                                                Stop-Service -Name 'Tomcat10' -Force
                                                Write-Host '✅ Tomcat stopped using PowerShell'
                                            }
                                        }"
                                    '''
                                    env.TOMCAT_STOP_METHOD = 'powershell'

                                } catch (Exception e3) {
                                    echo "❌ All methods failed to stop Tomcat"
                                    echo "🔧 MANUAL INTERVENTION REQUIRED:"
                                    echo "1. Open Command Prompt as Administrator"
                                    echo "2. Run: net stop ${TOMCAT_SERVICE}"
                                    echo "3. Or use Services.msc to stop Tomcat service"
                                    echo "4. Then resume Jenkins pipeline"

                                    // Don't fail the build, but mark for manual intervention
                                    env.MANUAL_TOMCAT_STOP = 'true'
                                    echo "⚠️  Proceeding with deployment - Tomcat may still be running"
                                }
                            }
                        }

                        // Wait for service to fully stop
                        if(env.MANUAL_TOMCAT_STOP != 'true') {
                            echo "⏳ Waiting for Tomcat to fully stop..."
                            bat 'powershell -Command "Start-Sleep -Seconds 15"'

                            // Verify service is stopped
                            def stopStatus = bat(script: "sc query ${TOMCAT_SERVICE} | findstr STATE", returnStdout: true).trim()
                            if(stopStatus.contains("STOPPED")) {
                                echo "✅ Tomcat service confirmed stopped"
                            } else {
                                echo "⚠️  Tomcat may still be running: ${stopStatus}"
                            }
                        }
                    } else {
                        echo "ℹ️  Tomcat was not running - skipping stop step"
                    }
                }
            }
        }

        stage('Deploy Application'){
            steps{
                bat """
                    echo "=== Starting Application Deployment ==="

                    echo "Step 1: Removing old application files..."
                    if exist "${TOMCAT_WEBAPPS}\\${APP_NAME}.war" (
                        echo "Removing old WAR file..."
                        del "${TOMCAT_WEBAPPS}\\${APP_NAME}.war"
                    )

                    if exist "${TOMCAT_WEBAPPS}\\${APP_NAME}" (
                        echo "Removing old application directory..."
                        rmdir /s /q "${TOMCAT_WEBAPPS}\\${APP_NAME}"
                        echo "✅ Old application files removed"
                    )

                    echo "Step 2: Deploying new WAR file..."
                    copy target\\*.war "${TOMCAT_WEBAPPS}\\${APP_NAME}.war"
                    echo "✅ New WAR file deployed successfully"

                    echo "Step 3: Setting file permissions (if needed)..."
                    rem Grant full control to Tomcat service account if needed
                    icacls "${TOMCAT_WEBAPPS}\\${APP_NAME}.war" /grant "Everyone:(F)" /T 2>nul || echo "Permission setting skipped"
                """
            }
        }

        stage('Start Tomcat'){
            steps{
                script{
                    echo "=== Starting Tomcat Service ==="

                    try {
                        bat "net start ${TOMCAT_SERVICE}"
                        echo "✅ Tomcat started successfully"
                        env.TOMCAT_START_SUCCESS = 'true'

                    } catch (Exception e) {
                        echo "❌ Failed to start Tomcat: ${e.getMessage()}"

                        // Check if it's already running
                        def status = bat(script: "sc query ${TOMCAT_SERVICE} | findstr STATE", returnStdout: true).trim()
                        if(status.contains("RUNNING")) {
                            echo "ℹ️  Tomcat is already running"
                            env.TOMCAT_START_SUCCESS = 'true'
                        } else {
                            echo "🔧 MANUAL INTERVENTION REQUIRED:"
                            echo "Please manually start Tomcat using one of these methods:"
                            echo "1. Command Prompt as Admin: net start ${TOMCAT_SERVICE}"
                            echo "2. Services.msc: Start Apache Tomcat service"
                            echo "3. Tomcat bin directory: startup.bat"
                            env.TOMCAT_START_SUCCESS = 'false'
                        }
                    }

                    if(env.TOMCAT_START_SUCCESS == 'true') {
                        echo "⏳ Waiting for Tomcat to fully start and deploy application..."
                        bat 'powershell -Command "Start-Sleep -Seconds 45"'
                    }
                }
            }
        }

        stage('Post-Deployment Verification'){
            steps{
                script{
                    echo "=== Post-Deployment Verification ==="

                    try {
                        // Check Tomcat service status
                        bat """
                            echo "Checking Tomcat service status..."
                            sc query ${TOMCAT_SERVICE} | findstr "RUNNING" || (echo "⚠️  Tomcat service is not running" && exit 1)
                            echo "✅ Tomcat service is running"
                        """

                        // Check if application was deployed (directory exists)
                        bat """
                            echo "Checking application deployment..."
                            if exist "${TOMCAT_WEBAPPS}\\${APP_NAME}" (
                                echo "✅ Application directory exists"
                                echo "Application files:"
                                dir "${TOMCAT_WEBAPPS}\\${APP_NAME}" /W
                            ) else (
                                echo "⚠️  Application directory not found - deployment may be in progress"
                            )
                        """

                        // Test API endpoints
                        def endpoints = [
                            "http://localhost:8092/student/",
                            "http://localhost:8092/student/api/",
                            "http://localhost:8080/student/",
                            "http://localhost:8080/student/api/"
                        ]

                        def workingEndpoint = null
                        echo "Testing API endpoints..."

                        for (endpoint in endpoints) {
                            echo "Testing: ${endpoint}"
                            def result = bat(script: "curl -s -o nul -w \"%{http_code}\" --connect-timeout 10 \"${endpoint}\"", returnStdout: true).trim()

                            if (result == "200") {
                                echo "✅ ${endpoint} - HTTP 200 (SUCCESS)"
                                workingEndpoint = endpoint
                                break
                            } else if (result == "404") {
                                echo "❌ ${endpoint} - HTTP 404 (Not Found)"
                            } else if (result == "000") {
                                echo "❌ ${endpoint} - Connection failed"
                            } else {
                                echo "⚠️  ${endpoint} - HTTP ${result}"
                            }
                        }

                        if (workingEndpoint) {
                            echo "🎉 DEPLOYMENT SUCCESSFUL!"
                            echo "✅ Working endpoint found: ${workingEndpoint}"
                            currentBuild.result = 'SUCCESS'
                        } else {
                            echo "⚠️  No working endpoints found - application may still be starting"
                            currentBuild.result = 'UNSTABLE'
                        }

                    } catch (Exception e) {
                        echo "Verification encountered issues: ${e.getMessage()}"
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }
    }

    post{
        always{
            script{
                echo "=== DEPLOYMENT SUMMARY ==="
                echo "Backup location: ${env.BACKUP_FILE ?: 'No backup created'}"
                echo "Backup directory: ${BACKUP_DIR}"
                echo "Tomcat stop method: ${env.TOMCAT_STOP_METHOD ?: 'Not stopped'}"
                echo "Tomcat start success: ${env.TOMCAT_START_SUCCESS ?: 'Unknown'}"
            }
            echo "=== CLEANING UP WORKSPACE ==="
            deleteDir()
        }
        success{
            echo "🎉 === BUILD AND DEPLOYMENT SUCCESSFUL ==="
            echo "✅ Student application deployed successfully"
            echo "📁 Backup stored at: ${env.BACKUP_FILE}"
            echo "🌐 Application should be accessible soon"
        }
        unstable{
            echo "⚠️  === DEPLOYMENT COMPLETED WITH WARNINGS ==="
            echo "📁 Backup available at: ${env.BACKUP_FILE}"
            echo "🔧 Manual verification may be required"
            echo "Check Tomcat logs and application endpoints manually"
        }
        failure{
            echo "❌ === DEPLOYMENT FAILED ==="
            echo "🔄 ROLLBACK OPTIONS:"
            echo "1. Restore from backup: ${env.BACKUP_FILE}"
            echo "2. Manual rollback command:"
            echo "   copy \"${env.BACKUP_FILE}\" \"${TOMCAT_WEBAPPS}\\${APP_NAME}.war\""
            echo ""
            echo "🔧 ADMIN PRIVILEGE SOLUTIONS:"
            echo "1. Run Jenkins service as Administrator"
            echo "2. Use 'Run as Administrator' for Jenkins"
            echo "3. Configure Jenkins to run with admin privileges"
            echo "4. Manual Tomcat control via Services.msc"
        }
    }
}





























[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  18.047 s
[INFO] Finished at: 2025-08-10T13:34:53+05:30
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // script
Post stage
[Pipeline] echo
Build completed successfully!
[Pipeline] echo
Now Archiving the Artifacts
[Pipeline] archiveArtifacts
Archiving artifacts
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Pre-Deployment Checks)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Pre-Deployment Checks ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo "Creating backup directory if it doesn't exist..." 
"Creating backup directory if it doesn't exist..."

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if not exist "C:\Jenkins\Backups\StudentApp" (
mkdir "C:\Jenkins\Backups\StudentApp"  
 echo "Ã¢Å“â€¦ Backup directory created: C:\Jenkins\Backups\StudentApp" 
)  else (echo "Ã¢Å“â€¦ Backup directory already exists: C:\Jenkins\Backups\StudentApp" ) 
"Ã¢Å“â€¦ Backup directory already exists: C:\Jenkins\Backups\StudentApp"
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo "Checking Tomcat directory access..." 
"Checking Tomcat directory access..."

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if exist "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps" (echo "Ã¢Å“â€¦ Tomcat webapps directory accessible" )  else (
echo "Ã¢ï¿½Å’ Cannot access Tomcat webapps directory"  
 exit 1 
) 
"Ã¢Å“â€¦ Tomcat webapps directory accessible"
[Pipeline] bat
[Pipeline] echo
Current Tomcat service status: C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>sc query Tomcat10   | findstr STATE 
        STATE              : 1  STOPPED
[Pipeline] echo
âœ… Tomcat is not running - can proceed safely
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Create Backup)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Creating Application Backup ===
[Pipeline] bat
[Pipeline] bat
Backup timestamp: 20250810_133457
Backup location: C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_133457
No existing WAR file found - fresh deployment
Cleaning old backups (keeping last 5)...
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Stop Tomcat (Admin Required))
Stage "Stop Tomcat (Admin Required)" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy Application)
Stage "Deploy Application" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Start Tomcat)
Stage "Start Tomcat" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Post-Deployment Verification)
Stage "Post-Deployment Verification" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== DEPLOYMENT SUMMARY ===
[Pipeline] echo
Backup location: C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_133457
[Pipeline] echo
Backup directory: C:\Jenkins\Backups\StudentApp
[Pipeline] echo
Tomcat stop method: Not stopped
[Pipeline] echo
Tomcat start success: Unknown
[Pipeline] }
[Pipeline] // script
[Pipeline] echo
=== CLEANING UP WORKSPACE ===
[Pipeline] deleteDir
[Pipeline] echo
â�Œ === DEPLOYMENT FAILED ===
[Pipeline] echo
ðŸ”„ ROLLBACK OPTIONS:
[Pipeline] echo
1. Restore from backup: C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_133457
[Pipeline] echo
2. Manual rollback command:
[Pipeline] echo
   copy "C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_133457" "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student.war"
[Pipeline] echo

[Pipeline] echo
ðŸ”§ ADMIN PRIVILEGE SOLUTIONS:
[Pipeline] echo
1. Run Jenkins service as Administrator
[Pipeline] echo
2. Use 'Run as Administrator' for Jenkins
[Pipeline] echo
3. Configure Jenkins to run with admin privileges
[Pipeline] echo
4. Manual Tomcat control via Services.msc
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE
























[INFO] The original artifact has been renamed to C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war.original
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  15.761 s
[INFO] Finished at: 2025-08-10T13:47:33+05:30
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // script
Post stage
[Pipeline] echo
Build completed successfully!
[Pipeline] echo
Now Archiving the Artifacts
[Pipeline] archiveArtifacts
Archiving artifacts
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Pre-Deployment Checks)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Pre-Deployment Checks ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo "Creating backup directory if it doesn't exist..." 
"Creating backup directory if it doesn't exist..."

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if not exist "C:\Jenkins\Backups\StudentApp" (
mkdir "C:\Jenkins\Backups\StudentApp"  
 echo "Ã¢Å“â€¦ Backup directory created: C:\Jenkins\Backups\StudentApp" 
)  else (echo "Ã¢Å“â€¦ Backup directory already exists: C:\Jenkins\Backups\StudentApp" ) 
"Ã¢Å“â€¦ Backup directory already exists: C:\Jenkins\Backups\StudentApp"
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo "Checking Tomcat directory access..." 
"Checking Tomcat directory access..."

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if exist "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps" (echo "Ã¢Å“â€¦ Tomcat webapps directory accessible" )  else (
echo "Ã¢ï¿½Å’ Cannot access Tomcat webapps directory"  
 exit 1 
) 
"Ã¢Å“â€¦ Tomcat webapps directory accessible"
[Pipeline] bat
[Pipeline] echo
Current Tomcat service status: C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>sc query Tomcat10   | findstr STATE 
        STATE              : 1  STOPPED
[Pipeline] echo
âœ… Tomcat is not running - can proceed safely
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Create Backup)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Creating Application Backup ===
[Pipeline] bat
[Pipeline] bat
Backup timestamp: 20250810_134738
Backup location: C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_134738
No existing WAR file found - fresh deployment
Cleaning old backups (keeping last 5)...
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Stop Tomcat)
Stage "Stop Tomcat" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy Application)
Stage "Deploy Application" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Start Tomcat)
Stage "Start Tomcat" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Post-Deployment Verification)
Stage "Post-Deployment Verification" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== DEPLOYMENT SUMMARY ===
[Pipeline] echo
Backup location: C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_134738
[Pipeline] echo
Backup directory: C:\Jenkins\Backups\StudentApp
[Pipeline] echo
Tomcat stop method: Not stopped
[Pipeline] echo
Tomcat start success: Unknown
[Pipeline] }
[Pipeline] // script
[Pipeline] echo
=== CLEANING UP WORKSPACE ===
[Pipeline] deleteDir
[Pipeline] echo
â�Œ === DEPLOYMENT FAILED ===
[Pipeline] echo
ðŸ”„ ROLLBACK OPTIONS:
[Pipeline] echo
1. Restore from backup: C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_134738
[Pipeline] echo
2. Manual rollback command:
[Pipeline] echo
   copy "C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_134738" "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student.war"
[Pipeline] echo

[Pipeline] echo
ðŸ”§ ADMIN PRIVILEGE SOLUTIONS:
[Pipeline] echo
1. Run Jenkins service as Administrator
[Pipeline] echo
2. Use 'Run as Administrator' for Jenkins
[Pipeline] echo
3. Configure Jenkins to run with admin privileges
[Pipeline] echo
4. Manual Tomcat control via Services.msc
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE




Started by user Taran Singh Duggal
Obtained Jenkinsfile from git https://github.com/Taran-Duggal/DockerDb
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe init C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1 # timeout=10
Fetching upstream changes from https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe --version # timeout=10
 > git --version # 'git version 2.45.1.windows.1'
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe fetch --tags --force --progress -- https://github.com/Taran-Duggal/DockerDb +refs/heads/*:refs/remotes/origin/* # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config remote.origin.url https://github.com/Taran-Duggal/DockerDb # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-parse "refs/remotes/origin/main^{commit}" # timeout=10
Checking out Revision 1ca0f5a3d045ef61815261ac6b10d78e402291d5 (refs/remotes/origin/main)
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config core.sparsecheckout # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe checkout -f 1ca0f5a3d045ef61815261ac6b10d78e402291d5 # timeout=10
Commit message: "changes seek"
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-list --no-walk 628006ba5aa56103d10a2fce4cbdfafcd98c11e1 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Starting Maven Build ===
[Pipeline] bat
curl: (2) no URL specified
curl: try 'curl --help' for more information

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>curl -s -o nul -w "//repo.maven.apache.org/maven2/ 
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Pre-Deployment Checks)
Stage "Pre-Deployment Checks" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Create Backup)
Stage "Create Backup" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Stop Tomcat)
Stage "Stop Tomcat" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy Application)
Stage "Deploy Application" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Start Tomcat)
Stage "Start Tomcat" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Verify Deployment)
Stage "Verify Deployment" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
=== Cleaning Workspace ===
[Pipeline] deleteDir
[Pipeline] echo

            === Deployment Summary ===
            Backup Location: N/A
            Tomcat Status: Was stopped
            Stop Method: not_needed
            Start Success: N/A
            
[Pipeline] echo

            â�Œ Deployment failed
            Rollback Options:
            1. Restore backup: copy "null" "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student.war"
            2. Check Tomcat logs: type "%CATALINA_HOME%\logs\catalina.out"
            
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 2
Finished: FAILURE


















Started by user Taran Singh Duggal
Obtained Jenkinsfile from git https://github.com/Taran-Duggal/DockerDb
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe init C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1 # timeout=10
Fetching upstream changes from https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe --version # timeout=10
 > git --version # 'git version 2.45.1.windows.1'
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe fetch --tags --force --progress -- https://github.com/Taran-Duggal/DockerDb +refs/heads/*:refs/remotes/origin/* # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config remote.origin.url https://github.com/Taran-Duggal/DockerDb # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-parse "refs/remotes/origin/main^{commit}" # timeout=10
Checking out Revision 191ac7be6c24a3d0effe29117e156b26d438224b (refs/remotes/origin/main)
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config core.sparsecheckout # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe checkout -f 191ac7be6c24a3d0effe29117e156b26d438224b # timeout=10
Commit message: "changes seek"
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-list --no-walk 1ca0f5a3d045ef61815261ac6b10d78e402291d5 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Verify DNS Resolution)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Verifying DNS Resolution for Maven Central ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>nslookup repo.maven.apache.org 
Non-authoritative answer:

Server:  UnKnown
Address:  192.168.1.1

Name:    maven.map.fastly.net
Addresses:  2a04:4e42:42::215
	  199.232.20.215
Aliases:  repo.maven.apache.org
	  repo.apache.maven.org

[Pipeline] echo
âœ… DNS resolution verified for repo.maven.apache.org
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Starting Maven Build ===
[Pipeline] bat
curl: (2) no URL specified
curl: try 'curl --help' for more information

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>curl -s -o nul -w "//repo.maven.apache.org/maven2/" 
[Pipeline] }
[Pipeline] // script
Post stage
[Pipeline] echo
Build failed - check Maven configuration and network connectivity
[Pipeline] echo
Verify hosts file contains correct entry for repo.maven.apache.org
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Pre-Deployment Checks)
Stage "Pre-Deployment Checks" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Create Backup)
Stage "Create Backup" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy Application)
Stage "Deploy Application" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Verify Deployment)
Stage "Verify Deployment" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
=== Cleaning Workspace ===
[Pipeline] deleteDir
[Pipeline] echo

            === Deployment Summary ===
            Backup Location: N/A
            Tomcat Status: Was stopped
            Build Source: Offline
            
[Pipeline] echo

            â�Œ Pipeline failed
            Troubleshooting Steps:
            1. Verify DNS resolution for repo.maven.apache.org
            2. Check Maven build logs for errors
            3. Verify Tomcat service account has write permissions to C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps
            4. Check Jenkins agent connectivity
            
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 2
Finished: FAILURE



















PS C:\Users\duggal.84> Invoke-WebRequest -Uri "https://repo.maven.apache.org/maven2/" -Method Head


StatusCode        : 200
StatusDescription : OK
Content           :
RawContent        : HTTP/1.1 200 OK
                    Connection: keep-alive
                    Age: 1933894
                    X-Served-By: cache-iad-kcgs7200026-IAD, cache-del21720-DEL
                    X-Cache: HIT, HIT
                    X-Cache-Hits: 565, 0
                    X-Timer: S1754815190.275844,VS0,VE1
                    Accept-...
Forms             : {}
Headers           : {[Connection, keep-alive], [Age, 1933894], [X-Served-By, cache-iad-kcgs7200026-IAD,
                    cache-del21720-DEL], [X-Cache, HIT, HIT]...}
Images            : {}
InputFields       : {}
Links             : {}
ParsedHtml        : mshtml.HTMLDocumentClass
RawContentLength  : 0





























Started by user Taran Singh Duggal
Obtained Jenkinsfile from git https://github.com/Taran-Duggal/DockerDb
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe init C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1 # timeout=10
Fetching upstream changes from https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe --version # timeout=10
 > git --version # 'git version 2.45.1.windows.1'
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe fetch --tags --force --progress -- https://github.com/Taran-Duggal/DockerDb +refs/heads/*:refs/remotes/origin/* # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config remote.origin.url https://github.com/Taran-Duggal/DockerDb # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-parse "refs/remotes/origin/main^{commit}" # timeout=10
Checking out Revision 93ad261d7c9ea328bc988155b69eca33682740f3 (refs/remotes/origin/main)
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config core.sparsecheckout # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe checkout -f 93ad261d7c9ea328bc988155b69eca33682740f3 # timeout=10
Commit message: "changes seek"
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-list --no-walk 191ac7be6c24a3d0effe29117e156b26d438224b # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Verify Connectivity)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Verifying Maven Central Connectivity ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>nslookup repo.maven.apache.org 
Non-authoritative answer:

Server:  UnKnown
Address:  192.168.1.1

Name:    maven.map.fastly.net
Addresses:  2a04:4e42:42::215
	  199.232.20.215
Aliases:  repo.maven.apache.org
	  repo.apache.maven.org

[Pipeline] echo
âœ… DNS resolution verified for repo.maven.apache.org
[Pipeline] powershell
[Pipeline] echo
Maven Central connectivity check returned HTTP 200
[Pipeline] echo
âœ… Maven Central is accessible
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Starting Maven Build ===
[Pipeline] bat
curl: (2) no URL specified
curl: try 'curl --help' for more information

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>curl -s -o nul -w "//repo.maven.apache.org/maven2/" 
[Pipeline] }
[Pipeline] // script
Post stage
[Pipeline] echo
Build failed - check Maven configuration and network connectivity
[Pipeline] echo
Verify hosts file contains correct entry for repo.maven.apache.org
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Pre-Deployment Checks)
Stage "Pre-Deployment Checks" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Create Backup)
Stage "Create Backup" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy Application)
Stage "Deploy Application" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Verify Deployment)
Stage "Verify Deployment" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
=== Cleaning Workspace ===
[Pipeline] deleteDir
[Pipeline] echo

            === Deployment Summary ===
            Backup Location: N/A
            Tomcat Status: Was stopped
            Build Source: Offline
            
[Pipeline] echo

            â�Œ Pipeline failed
            Troubleshooting Steps:
            1. Verify DNS resolution for repo.maven.apache.org
            2. Check Maven build logs for errors
            3. Verify Tomcat service account has write permissions to C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps
            4. Check Jenkins agent connectivity
            
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 2
Finished: FAILURE



























Started by user Taran Singh Duggal
Obtained Jenkinsfile from git https://github.com/Taran-Duggal/DockerDb
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe init C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1 # timeout=10
Fetching upstream changes from https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe --version # timeout=10
 > git --version # 'git version 2.45.1.windows.1'
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe fetch --tags --force --progress -- https://github.com/Taran-Duggal/DockerDb +refs/heads/*:refs/remotes/origin/* # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config remote.origin.url https://github.com/Taran-Duggal/DockerDb # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-parse "refs/remotes/origin/main^{commit}" # timeout=10
Checking out Revision db32dbf6b722c7fbbcf94d9997deb3846c2a7811 (refs/remotes/origin/main)
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config core.sparsecheckout # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe checkout -f db32dbf6b722c7fbbcf94d9997deb3846c2a7811 # timeout=10
Commit message: "changes seek"
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-list --no-walk 93ad261d7c9ea328bc988155b69eca33682740f3 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Verify Connectivity)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Verifying Maven Central Connectivity ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>nslookup repo.maven.apache.org 
Non-authoritative answer:

Server:  UnKnown
Address:  192.168.1.1

Name:    maven.map.fastly.net
Addresses:  2a04:4e42:42::215
	  199.232.20.215
Aliases:  repo.maven.apache.org
	  repo.apache.maven.org

[Pipeline] echo
âœ… DNS resolution verified for repo.maven.apache.org
[Pipeline] powershell
[Pipeline] echo
Maven Central connectivity check returned HTTP 200
[Pipeline] echo
âœ… Maven Central is accessible
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Starting Maven Build ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>mvn --version 
Apache Maven 3.9.11 (3e54c93a704957b63ee3494413a2b544fd3d825b)
Maven home: C:\Users\duggal.84\OneDrive - TeleperformanceDIBS\apache-maven-3.9.11
Java version: 17.0.12, vendor: Oracle Corporation, runtime: C:\Program Files\Java\jdk-17
Default locale: en_US, platform encoding: Cp1252
OS name: "windows 11", version: "10.0", arch: "amd64", family: "windows"
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>mvn clean package -DskipTests=true 
[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------------< com.dockerwithDb:DockerDb >----------------------
[INFO] Building DockerDb 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- clean:3.4.1:clean (default-clean) @ DockerDb ---
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ DockerDb ---
[INFO] Copying 1 resource from src\main\resources to target\classes
[INFO] Copying 1 resource from src\main\resources to target\classes
[INFO] 
[INFO] --- compiler:3.14.0:compile (default-compile) @ DockerDb ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 6 source files with javac [debug parameters release 17] to target\classes
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ DockerDb ---
[INFO] skip non existing resourceDirectory C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\src\test\resources
[INFO] 
[INFO] --- compiler:3.14.0:testCompile (default-testCompile) @ DockerDb ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [debug parameters release 17] to target\test-classes
[INFO] 
[INFO] --- surefire:3.5.3:test (default-test) @ DockerDb ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- war:3.3.2:war (default-war) @ DockerDb ---
[INFO] Packaging webapp
[INFO] Assembling webapp [DockerDb] in [C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student]
[INFO] Processing war project
[INFO] Building war: C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war
[INFO] 
[INFO] --- spring-boot:3.5.4:repackage (repackage) @ DockerDb ---
[INFO] Replacing main artifact C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war with repackaged archive, adding nested dependencies in BOOT-INF/.
[INFO] The original artifact has been renamed to C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war.original
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  20.109 s
[INFO] Finished at: 2025-08-10T14:22:48+05:30
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Pre-Deployment Checks)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Pre-Deployment Checks ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if not exist "C:\Jenkins\Backups\StudentApp" (
mkdir "C:\Jenkins\Backups\StudentApp"   || exit /b 1  
 echo Ã¢Å“â€¦ Created backup directory 
) 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if not exist "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps" (
echo Ã¢ï¿½Å’ Tomcat webapps directory not accessible  
 exit 1 
) 
[Pipeline] bat
[Pipeline] echo
âœ… Tomcat already stopped
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Create Backup)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Creating Application Backup ===
[Pipeline] bat
[Pipeline] bat
Fresh deployment detected
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy Application)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Deploying Application ===
[Pipeline] bat
Removing old deployment...
Deploying new WAR...
target\student.war
        1 file(s) copied.
Setting permissions...
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Verify Deployment)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Verifying Deployment ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if not exist "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student.war" (
echo Ã¢ï¿½Å’ WAR file not deployed  
 exit 1 
) 

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo Ã¢Å“â€¦ WAR file deployed 
Ã¢Å“â€¦ WAR file deployed
[Pipeline] bat
curl: (2) no URL specified
curl: try 'curl --help' for more information

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>curl -s -o nul -w "//localhost:8080/student/api/health" 
[Pipeline] echo
âš ï¸� Failed to check http://localhost:8080/student/api/health: script returned exit code 2
[Pipeline] bat
curl: (2) no URL specified
curl: try 'curl --help' for more information

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>curl -s -o nul -w "//localhost:8080/student/health" 
[Pipeline] echo
âš ï¸� Failed to check http://localhost:8080/student/health: script returned exit code 2
[Pipeline] echo
âš ï¸� No healthy endpoints found - application may still be starting
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
=== Cleaning Workspace ===
[Pipeline] deleteDir
[Pipeline] echo

            === Deployment Summary ===
            Backup Location: C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_142253
            Tomcat Status: Was stopped
            Build Source: Offline
            
[Pipeline] echo
âš ï¸� Pipeline completed with warnings
[Pipeline] echo
Application may still be starting - check Tomcat logs if endpoints aren't responding
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: UNSTABLE

























Started by user Taran Singh Duggal
Obtained Jenkinsfile from git https://github.com/Taran-Duggal/DockerDb
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: NONE
No credentials specified
Cloning the remote Git repository
Cloning repository https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe init C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1 # timeout=10
Fetching upstream changes from https://github.com/Taran-Duggal/DockerDb
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe --version # timeout=10
 > git --version # 'git version 2.45.1.windows.1'
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe fetch --tags --force --progress -- https://github.com/Taran-Duggal/DockerDb +refs/heads/*:refs/remotes/origin/* # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config remote.origin.url https://github.com/Taran-Duggal/DockerDb # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
Avoid second fetch
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-parse "refs/remotes/origin/main^{commit}" # timeout=10
Checking out Revision db32dbf6b722c7fbbcf94d9997deb3846c2a7811 (refs/remotes/origin/main)
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe config core.sparsecheckout # timeout=10
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe checkout -f db32dbf6b722c7fbbcf94d9997deb3846c2a7811 # timeout=10
Commit message: "changes seek"
 > C:\Users\duggal.84\AppData\Local\Programs\Git\cmd\git.exe rev-list --no-walk db32dbf6b722c7fbbcf94d9997deb3846c2a7811 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Verify Connectivity)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Verifying Maven Central Connectivity ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>nslookup repo.maven.apache.org 
Non-authoritative answer:

Server:  UnKnown
Address:  192.168.1.1

Name:    maven.map.fastly.net
Addresses:  2a04:4e42:42::215
	  199.232.20.215
Aliases:  repo.maven.apache.org
	  repo.apache.maven.org

[Pipeline] echo
âœ… DNS resolution verified for repo.maven.apache.org
[Pipeline] powershell
[Pipeline] echo
Maven Central connectivity check returned HTTP 200
[Pipeline] echo
âœ… Maven Central is accessible
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Starting Maven Build ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>mvn --version 
Apache Maven 3.9.11 (3e54c93a704957b63ee3494413a2b544fd3d825b)
Maven home: C:\Users\duggal.84\OneDrive - TeleperformanceDIBS\apache-maven-3.9.11
Java version: 17.0.12, vendor: Oracle Corporation, runtime: C:\Program Files\Java\jdk-17
Default locale: en_US, platform encoding: Cp1252
OS name: "windows 11", version: "10.0", arch: "amd64", family: "windows"
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>mvn clean package -DskipTests=true 
[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------------< com.dockerwithDb:DockerDb >----------------------
[INFO] Building DockerDb 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ war ]---------------------------------
[INFO] 
[INFO] --- clean:3.4.1:clean (default-clean) @ DockerDb ---
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ DockerDb ---
[INFO] Copying 1 resource from src\main\resources to target\classes
[INFO] Copying 1 resource from src\main\resources to target\classes
[INFO] 
[INFO] --- compiler:3.14.0:compile (default-compile) @ DockerDb ---
[INFO] Recompiling the module because of changed source code.
[INFO] Compiling 6 source files with javac [debug parameters release 17] to target\classes
[INFO] 
[INFO] --- resources:3.3.1:testResources (default-testResources) @ DockerDb ---
[INFO] skip non existing resourceDirectory C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\src\test\resources
[INFO] 
[INFO] --- compiler:3.14.0:testCompile (default-testCompile) @ DockerDb ---
[INFO] Recompiling the module because of changed dependency.
[INFO] Compiling 2 source files with javac [debug parameters release 17] to target\test-classes
[INFO] 
[INFO] --- surefire:3.5.3:test (default-test) @ DockerDb ---
[INFO] Tests are skipped.
[INFO] 
[INFO] --- war:3.3.2:war (default-war) @ DockerDb ---
[INFO] Packaging webapp
[INFO] Assembling webapp [DockerDb] in [C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student]
[INFO] Processing war project
[INFO] Building war: C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war
[INFO] 
[INFO] --- spring-boot:3.5.4:repackage (repackage) @ DockerDb ---
[INFO] Replacing main artifact C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war with repackaged archive, adding nested dependencies in BOOT-INF/.
[INFO] The original artifact has been renamed to C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1\target\student.war.original
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  19.000 s
[INFO] Finished at: 2025-08-10T14:25:22+05:30
[INFO] ------------------------------------------------------------------------
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Pre-Deployment Checks)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Pre-Deployment Checks ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if not exist "C:\Jenkins\Backups\StudentApp" (
mkdir "C:\Jenkins\Backups\StudentApp"   || exit /b 1  
 echo Ã¢Å“â€¦ Created backup directory 
) 
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if not exist "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps" (
echo Ã¢ï¿½Å’ Tomcat webapps directory not accessible  
 exit 1 
) 
[Pipeline] bat
[Pipeline] echo
âš ï¸� Tomcat running - will attempt to stop
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Create Backup)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Creating Application Backup ===
[Pipeline] bat
[Pipeline] bat
Creating backup of WAR file...
        1 file(s) copied.
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy Application)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Deploying Application ===
[Pipeline] bat
Removing old deployment...
Deploying new WAR...
target\student.war
        1 file(s) copied.
Setting permissions...
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Verify Deployment)
[Pipeline] script
[Pipeline] {
[Pipeline] echo
=== Verifying Deployment ===
[Pipeline] bat

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>if not exist "C:\Program Files\Apache Software Foundation\Tomcat 10.1\webapps\student.war" (
echo Ã¢ï¿½Å’ WAR file not deployed  
 exit 1 
) 

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>echo Ã¢Å“â€¦ WAR file deployed 
Ã¢Å“â€¦ WAR file deployed
[Pipeline] bat
curl: (2) no URL specified
curl: try 'curl --help' for more information

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>curl -s -o nul -w "//localhost:8080/student/api/health" 
[Pipeline] echo
âš ï¸� Failed to check http://localhost:8080/student/api/health: script returned exit code 2
[Pipeline] bat
curl: (2) no URL specified
curl: try 'curl --help' for more information

C:\ProgramData\Jenkins\.jenkins\workspace\pipeline1>curl -s -o nul -w "//localhost:8080/student/health" 
[Pipeline] echo
âš ï¸� Failed to check http://localhost:8080/student/health: script returned exit code 2
[Pipeline] echo
âš ï¸� No healthy endpoints found - application may still be starting
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] echo
=== Cleaning Workspace ===
[Pipeline] deleteDir
[Pipeline] echo

            === Deployment Summary ===
            Backup Location: C:\Jenkins\Backups\StudentApp\student.war.backup.20250810_142526
            Tomcat Status: Was running
            Build Source: Offline
            
[Pipeline] echo
âš ï¸� Pipeline completed with warnings
[Pipeline] echo
Application may still be starting - check Tomcat logs if endpoints aren't responding
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: UNSTABLE
